import {
	parseUnits,
	zeroAddress,
	type Address,
	type Hash,
	type Hex
} from 'viem';
import { getPublicClient, getStoredWalletClient } from './clients.js';
import { privateKeyToAccount } from 'viem/accounts';
import { walletService } from './wallet.js';

// Tax ERC20 contract bytecode and ABI
const ERC20_TAX_ABI = [
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "_name",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "_symbol",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "_maxSupply",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "_dexRouter",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "_developmentFund",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_initialBuyFee",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_initialSellFee",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Approval",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "previousOwner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "OwnershipTransferred",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Transfer",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			}
		],
		"name": "allowance",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "approve",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			}
		],
		"name": "balanceOf",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "burn",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_swapAtAmount",
				"type": "uint256"
			}
		],
		"name": "changeSwapAtAmount",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "decimals",
		"outputs": [
			{
				"internalType": "uint8",
				"name": "",
				"type": "uint8"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "subtractedValue",
				"type": "uint256"
			}
		],
		"name": "decreaseAllowance",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "developmentFund",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_maxHolder",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "maxBuy",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_swapAtAmt",
				"type": "uint256"
			}
		],
		"name": "enableTrading",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			},
			{
				"internalType": "bool",
				"name": "excluded",
				"type": "bool"
			}
		],
		"name": "excludeFromFees",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			},
			{
				"internalType": "bool",
				"name": "excluded",
				"type": "bool"
			}
		],
		"name": "excludeFromMaxWallet",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "spender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "addedValue",
				"type": "uint256"
			}
		],
		"name": "increaseAllowance",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "isExcludedFromFee",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "maxHolder",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "maxWalletTime",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "name",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "pair",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "renounceOwnership",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_address",
				"type": "address"
			},
			{
				"internalType": "bool",
				"name": "_status",
				"type": "bool"
			}
		],
		"name": "setExcludeFromFee",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bool",
				"name": "_enabled",
				"type": "bool"
			}
		],
		"name": "setSwapAndLiquifyEnabled",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "swapAtAmount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "symbol",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalBuyFee",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalSellFee",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalSupply",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "tradingEnabled",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "tradingTime",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "transfer",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "transferFrom",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "transferOwnership",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "uniswapV2Router",
		"outputs": [
			{
				"internalType": "contract IUniswapV2Router02",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"stateMutability": "payable",
		"type": "receive"
	}
];

// ERC20 contract bytecode (OpenZeppelin ERC20 implementation)
const ERC20_TAX_BYTECODE = '0x608060405260036009819055600a55600b805460ff191690556000600e819055600f556013805461ff00191661010017905534801561003d57600080fd5b506040516121bc3803806121bc83398101604081905261005c91610590565b868661006733610311565b600461007383826106c4565b50600561008082826106c4565b50505061009a61009461030d60201b60201c565b86610361565b600f8590556013805460ff191690556009829055600a8190556001600160a01b0383166100d457600880546001600160a01b031916331790555b60008490506000816001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013d9190610782565b6001600160a01b031663c9c6539630846001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561018a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ae9190610782565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156101fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021f9190610782565b600680546001600160a01b038086166001600160a01b031992831617909255600780549284169290911691909117905590506001600c600061025e3390565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790556008549091168152600c909252808220805484166001908117909155308352912080549092161790556102c66102bf3390565b6001610427565b6007546102dd906001600160a01b03166001610427565b6102e8306001610427565b6006546102ff906001600160a01b03166001610427565b5050505050505050506107cb565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166103bc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b80600360008282546103ce91906107a4565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b61042f61045f565b6001600160a01b03919091166000908152600d60205260409020805460ff1916911515919091179055565b505050565b6000546001600160a01b031633146104b95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b3565b565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104e257600080fd5b81516001600160401b038111156104fb576104fb6104bb565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610529576105296104bb565b60405281815283820160200185101561054157600080fd5b60005b8281101561056057602081860181015183830182015201610544565b506000918101602001919091529392505050565b80516001600160a01b038116811461058b57600080fd5b919050565b600080600080600080600060e0888a0312156105ab57600080fd5b87516001600160401b038111156105c157600080fd5b6105cd8a828b016104d1565b60208a015190985090506001600160401b038111156105eb57600080fd5b6105f78a828b016104d1565b60408a0151909750955061060f905060608901610574565b935061061d60808901610574565b60a089015160c090990151979a96995094979396949593949392505050565b600181811c9082168061065057607f821691505b60208210810361067057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561045a57806000526020600020601f840160051c8101602085101561069d5750805b601f840160051c820191505b818110156106bd57600081556001016106a9565b5050505050565b81516001600160401b038111156106dd576106dd6104bb565b6106f1816106eb845461063c565b84610676565b6020601f821160018114610725576000831561070d5750848201515b600019600385901b1c1916600184901b1784556106bd565b600084815260208120601f198516915b828110156107555787850151825560209485019460019092019101610735565b50848210156107735786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60006020828403121561079457600080fd5b61079d82610574565b9392505050565b808201808211156107c557634e487b7160e01b600052601160045260246000fd5b92915050565b6119e2806107da6000396000f3fe6080604052600436106101e75760003560e01c80638691752411610102578063b8158d6011610095578063cfdbe82311610064578063cfdbe8231461056f578063d2fcc0011461058f578063dd62ed3e146105af578063f2fde38b146105cf57600080fd5b8063b8158d6014610503578063bc17b30c14610519578063c02466681461052f578063c49b9a801461054f57600080fd5b8063a457c2d7116100d1578063a457c2d714610483578063a8aa1b31146104a3578063a9059cbb146104c3578063af9549e0146104e357600080fd5b8063869175241461041a5780638a2381d7146104305780638da5cb5b1461045057806395d89b411461046e57600080fd5b806342966c681161017a5780635342acb4116101495780635342acb41461037f578063684521a6146103af57806370a08231146103cf578063715018a61461040557600080fd5b806342966c681461031757806347062402146103395780634ada218b1461034f5780634bd1df901461036957600080fd5b806323b872dd116101b657806323b872dd146102a55780632b14ca56146102c5578063313ce567146102db57806339509351146102f757600080fd5b806306fdde03146101f3578063095ea7b31461021e5780631694505e1461024e57806318160ddd1461028657600080fd5b366101ee57005b600080fd5b3480156101ff57600080fd5b506102086105ef565b60405161021591906115a5565b60405180910390f35b34801561022a57600080fd5b5061023e610239366004611608565b610681565b6040519015158152602001610215565b34801561025a57600080fd5b5060065461026e906001600160a01b031681565b6040516001600160a01b039091168152602001610215565b34801561029257600080fd5b506003545b604051908152602001610215565b3480156102b157600080fd5b5061023e6102c0366004611634565b61069b565b3480156102d157600080fd5b50610297600a5481565b3480156102e757600080fd5b5060405160128152602001610215565b34801561030357600080fd5b5061023e610312366004611608565b6106bf565b34801561032357600080fd5b50610337610332366004611675565b6106e1565b005b34801561034557600080fd5b5061029760095481565b34801561035b57600080fd5b5060135461023e9060ff1681565b34801561037557600080fd5b50610297600f5481565b34801561038b57600080fd5b5061023e61039a36600461168e565b600c6020526000908152604090205460ff1681565b3480156103bb57600080fd5b506103376103ca366004611675565b6106ee565b3480156103db57600080fd5b506102976103ea36600461168e565b6001600160a01b031660009081526001602052604090205490565b34801561041157600080fd5b50610337610750565b34801561042657600080fd5b50610297600e5481565b34801561043c57600080fd5b5060085461026e906001600160a01b031681565b34801561045c57600080fd5b506000546001600160a01b031661026e565b34801561047a57600080fd5b50610208610764565b34801561048f57600080fd5b5061023e61049e366004611608565b610773565b3480156104af57600080fd5b5060075461026e906001600160a01b031681565b3480156104cf57600080fd5b5061023e6104de366004611608565b6107ee565b3480156104ef57600080fd5b506103376104fe3660046116c0565b6107fc565b34801561050f57600080fd5b5061029760115481565b34801561052557600080fd5b5061029760105481565b34801561053b57600080fd5b5061033761054a3660046116c0565b6108e6565b34801561055b57600080fd5b5061033761056a3660046116f5565b610971565b34801561057b57600080fd5b5061033761058a366004611710565b610993565b34801561059b57600080fd5b506103376105aa3660046116c0565b610a63565b3480156105bb57600080fd5b506102976105ca36600461173c565b610a96565b3480156105db57600080fd5b506103376105ea36600461168e565b610ac1565b6060600480546105fe90611775565b80601f016020809104026020016040519081016040528092919081815260200182805461062a90611775565b80156106775780601f1061064c57610100808354040283529160200191610677565b820191906000526020600020905b81548152906001019060200180831161065a57829003601f168201915b5050505050905090565b60003361068f818585610b37565b60019150505b92915050565b6000336106a9858285610c5b565b6106b4858585610cd5565b506001949350505050565b60003361068f8185856106d28383610a96565b6106dc91906117c5565b610b37565b6106eb3382611038565b50565b6106f661116c565b8060000361074b5760405162461bcd60e51b815260206004820152601b60248201527f5f737761704174416d6f756e742076616c756520696e76616c6964000000000060448201526064015b60405180910390fd5b600e55565b61075861116c565b61076260006111c6565b565b6060600580546105fe90611775565b600033816107818286610a96565b9050838110156107e15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610742565b6106b48286868403610b37565b60003361068f818585610cd5565b61080461116c565b6001600160a01b03821661085a5760405162461bcd60e51b815260206004820152601760248201527f3078206973206e6f7420616363657074656420686572650000000000000000006044820152606401610742565b6001600160a01b0382166000908152600c602052604090205481151560ff9091161515036108bb5760405162461bcd60e51b815260206004820152600e60248201526d14dd185d1d5cc81dd85cc81cd95d60921b6044820152606401610742565b6001600160a01b03919091166000908152600c60205260409020805460ff1916911515919091179055565b6108ee61116c565b6001600160a01b0382166000908152600c602052604090205481151560ff9091161515036108bb5760405162461bcd60e51b815260206004820152602a60248201527f4163636f756e7420697320616c7265616479207468652076616c7565206f6620604482015269276578636c756465642760b01b6064820152608401610742565b61097961116c565b601380549115156101000261ff0019909216919091179055565b61099b61116c565b60135460ff16156109ee5760405162461bcd60e51b815260206004820152601860248201527f54726164696e6720616c726561647920656e61626c65642e00000000000000006044820152606401610742565b6013805460ff191660011790558215610a0c57600354600f55610a12565b600f8390555b610a1d4260786117c5565b601055426011558115610a34576012829055610a43565b696f2c4e995ec98e2000006012555b8015610a5057600e555050565b691fc3842bd1f071c00000600e55505050565b610a6b61116c565b6001600160a01b03919091166000908152600d60205260409020805460ff1916911515919091179055565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610ac961116c565b6001600160a01b038116610b2e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610742565b6106eb816111c6565b6001600160a01b038316610b995760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610742565b6001600160a01b038216610bfa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610742565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610c678484610a96565b90506000198114610ccf5781811015610cc25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610742565b610ccf8484848403610b37565b50505050565b6001600160a01b0383166000908152600c602052604081205460ff16158015610d1757506001600160a01b0383166000908152600c602052604090205460ff16155b8015610d265750600b5460ff16155b15610ea25760135460ff16610d7d5760405162461bcd60e51b815260206004820152601860248201527f54726164696e67206e6f742079657420656e61626c65642100000000000000006044820152606401610742565b6001600160a01b0383166000908152600d602052604090205460ff16158015610da857506010544211155b15610e2157600f546001600160a01b038416600090815260016020526040902054610dd390846117c5565b1115610e215760405162461bcd60e51b815260206004820152601b60248201527f556e61626c6520746f20657863656564204d61782057616c6c657400000000006044820152606401610742565b6007546001600160a01b038581169116148015610e4b5750601154610e4790601e6117c5565b4211155b15610ea257601254821115610ea25760405162461bcd60e51b815260206004820152601860248201527f556e61626c6520746f20657863656564204d61782042757900000000000000006044820152606401610742565b600b5460ff1615610eb857610ccf848484611216565b3060009081526001602052604081205490506000600e548210158015610eec57506007546001600160a01b03878116911614155b9050808015610efe5750600b5460ff16155b8015610f115750601354610100900460ff165b15610f3a57600b805460ff19166001179055600e54610f2f906113c1565b600b805460ff191690555b6001600160a01b0386166000908152600c602052604090205460ff16158015610f7057506007546001600160a01b038681169116145b15610f7f57600a549250610fc0565b6001600160a01b0385166000908152600c602052604090205460ff16158015610fb557506007546001600160a01b038781169116145b15610fc05760095492505b600083118015610fd957506001600160a01b0386163014155b8015610fee57506001600160a01b0385163014155b1561102557600061100a6064611004878761157a565b9061158d565b9050611017873083611216565b6110218582611599565b9450505b611030868686611216565b505050505050565b6001600160a01b0382166110985760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610742565b6001600160a01b0382166000908152600160205260409020548181101561110c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610742565b6001600160a01b03831660008181526001602090815260408083208686039055600380548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6000546001600160a01b031633146107625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610742565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03831661127a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610742565b6001600160a01b0382166112dc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610742565b6001600160a01b038316600090815260016020526040902054818110156113545760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610742565b6001600160a01b0380851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113b49086815260200190565b60405180910390a3610ccf565b60408051600280825260608201835260009260208301908036833701905050905030816000815181106113f6576113f66117ee565b6001600160a01b03928316602091820292909201810191909152600654604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561144f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114739190611804565b81600181518110611486576114866117ee565b6001600160a01b0392831660209182029290920101526006546114ac9130911684610b37565b6006546040516318cbafe560e01b81526001600160a01b03909116906318cbafe5906114e5908590600090869030904290600401611821565b6000604051808303816000875af1158015611504573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261152c9190810190611893565b5060085460405147916001600160a01b0316908290600081818185875af1925050503d8060008114611030576040519150601f19603f3d011682016040523d82523d6000602084013e611030565b60006115868284611960565b9392505050565b60006115868284611977565b60006115868284611999565b602081526000825180602084015260005b818110156115d357602081860181015160408684010152016115b6565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146106eb57600080fd5b6000806040838503121561161b57600080fd5b8235611626816115f3565b946020939093013593505050565b60008060006060848603121561164957600080fd5b8335611654816115f3565b92506020840135611664816115f3565b929592945050506040919091013590565b60006020828403121561168757600080fd5b5035919050565b6000602082840312156116a057600080fd5b8135611586816115f3565b803580151581146116bb57600080fd5b919050565b600080604083850312156116d357600080fd5b82356116de816115f3565b91506116ec602084016116ab565b90509250929050565b60006020828403121561170757600080fd5b611586826116ab565b60008060006060848603121561172557600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561174f57600080fd5b823561175a816115f3565b9150602083013561176a816115f3565b809150509250929050565b600181811c9082168061178957607f821691505b6020821081036117a957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610695576106956117af565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561181657600080fd5b8151611586816115f3565b600060a0820187835286602084015260a0604084015280865180835260c08501915060208801925060005b818110156118735783516001600160a01b031683526020938401939092019160010161184c565b50506001600160a01b039590951660608401525050608001529392505050565b6000602082840312156118a557600080fd5b815167ffffffffffffffff8111156118bc57600080fd5b8201601f810184136118cd57600080fd5b805167ffffffffffffffff8111156118e7576118e76117d8565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715611914576119146117d8565b60405291825260208184018101929081018784111561193257600080fd5b6020850194505b8385101561195557845180825260209586019590935001611939565b509695505050505050565b8082028115828204841417610695576106956117af565b60008261199457634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610695576106956117af56fea2646970667358221220bd5e7de01c80600242b14af49ce4c3a4b14f8ab23ab94f2ee1666e47acc2ee1a64736f6c634300081a0033';

/**
 * Deploys an ERC20 token with tax functionality on buy/sell transactions
 * 
 * This function deploys a custom ERC20 token that implements:
 * - Buy/sell fees that can be set independently
 * - Development fund address to receive collected fees
 * - Integration with DEX router for liquidity management
 * - Owner controls for fee adjustments and trading parameters
 * 
 * @param name - Token name (e.g. "My Token")
 * @param symbol - Token symbol/ticker (e.g. "MTK")
 * @param dexRouter - DEX router contract address for liquidity pair creation
 * @param developmentFund - Address that receives collected transaction fees, defaults to zero address
 * @param percentageBuyFee - Fee percentage charged on buy transactions (e.g. 5 for 5%)
 * @param percentageSellFee - Fee percentage charged on sell transactions (e.g. 5 for 5%)
 * @param totalSupply - Total supply of tokens to mint (default: 100M)
 * @param network - Target blockchain network to deploy on (default: 'bsc-testnet')
 * 
 * @returns Object containing transaction hash and deployed contract address
 * @throws Error if contract deployment fails or receipt lacks contract address
 */
export async function deployERC20TokenTax(
	name: string,
	symbol: string,
	dexRouter: Address,
	walletName: string,
	developmentFund: Address = zeroAddress,
	percentageBuyFee: number = 0, // Default to 0% buy fee
	percentageSellFee: number = 0, // Default to 0% sell fee
	totalSupply: number = 100000000,
	network = 'bsc'
): Promise<{ txHash: Hash; contractAddress: Address }> {
	// Get wallet from stored wallets
	const wallet = await walletService.getWalletByName(walletName);
	const account = privateKeyToAccount(wallet.privateKey as Hex);

	// Create wallet client with stored wallet
	const client = await getStoredWalletClient(walletName, network);

	// Convert total supply to the correct number of decimals
	const totalSupplyWithDecimals = parseUnits(
		totalSupply.toString(),
		18
	);

	// Deploy the contract
	const txHash = await client.deployContract({
		abi: ERC20_TAX_ABI,
		bytecode: ERC20_TAX_BYTECODE,
		args: [
			name, symbol, totalSupplyWithDecimals,
			dexRouter, developmentFund,
			percentageBuyFee, percentageSellFee
		],
		account: client.account!,
		chain: client.chain
	});

	// Wait for the transaction to be mined to get the contract address
	const publicClient = getPublicClient(network);
	const receipt = await publicClient.waitForTransactionReceipt({ hash: txHash });

	if (!receipt.contractAddress) {
		throw new Error('Contract deployment failed: No contract address in receipt');
	}

	return {
		txHash,
		contractAddress: receipt.contractAddress
	};
}
